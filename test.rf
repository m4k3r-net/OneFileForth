.( ::: Test file for One File Forth ::: ) cr

1 constant on
0 constant off
1024 dup * constant 1Meg
freespace cellsize / constant start_mem
utime constant start_time

: set_trace trace ! ;
: set_log " test.log" outfile ;
: clr_log closeout ;
: tab 9 emit ;

.( ::: Loop test 1 begin-while-repeat ::: ) cr
: operations begin dup while -- repeat drop ;
noops 1Meg dup tab . ." loop operations " utime swap operations utime swap -
ops . ." forth operations in " . ." microseconds" cr

.( ::: code decompiled ::: ) cr
set_log
' operations see 
clr_log

.( ::: Loop test 2 begin-again ::: ) cr
: fast 1Meg begin -- dup 0 == if drop leave then again ; 
noops 1Meg tab . ." loop operations in " utime fast utime ops . ." forth operations in " swap - . ." microseconds " cr

.( ::: code decompiled ::: ) cr
set_log
' fast see
clr_log

.( ::: tracing 10 operations [indefinite loop] ::: ) cr
set_log
on set_trace
10 operations
off set_trace
clr_log

.( ::: testing definite loop ::: ) cr
: tstdo 0 do loop ;
noops 1Meg dup tab . ." do loop operations " utime swap tstdo utime swap -
ops . ." forth operations in " . ." microseconds" cr

.( ::: code decompiled ::: ) cr
set_log
' tstdo see 
clr_log

.( ::: tracing 10 do loop iterations ::: ) cr
set_log
on set_trace
10 tstdo
off set_trace
clr_log

.( ::: arithmetic tests ::: ) cr
set_log
." addition: 3 == " 1 2 + . cr
." subraction: 0 == " 2 2 - . cr
." multiplication: 81 == " 9 9 * . cr
." division: 4 == " 12 3 / . cr
clr_log

.( ::: ) 1Meg . .( 1 byte tty i/o operations ) cr
: sspin 0 do spin loop ;
utime 1Meg sspin utime swap - ops tab . ." forth operations in " . .( microseconds ) cr

.( ::: stack tests ::: ) cr 
set_log
1 2 3 4 5
.( ::: stack depth is ) depth . cr
.( ::: stack view is ) .s .( ::: )  cr 
.( ::: clear stack by printing ::: ) cr
. . . . . cr
clr_log

.( ::: loop backwards by 2 ::: ) cr
: bkw 0 100 do i . -2 +loop ;
set_log
bkw cr
clr_log

.( ::: loop forwards by 2 ::: ) cr
: fwd 100 0 do i . 2 +loop ;
set_log
fwd cr
clr_log

.( ::: conditional tests [modulo 5] ::: ) cr 
: conditional 0 do i 5 % if 46 emit else i . then loop ; 
set_log
100 conditional cr
clr_log

.( ::: word list ::: ) cr
set_log words clr_log cr

.( ::: end of tests ::: ) cr
.( ::: error: ) errval dup . errstr type cr
.( ::: total memory usage: ) 
freespace cellsize / start_mem swap - . ." bytes." cr
.( ::: total elapsed time: ) 
utime start_time - 1000000 / . ." seconds." cr

bye
